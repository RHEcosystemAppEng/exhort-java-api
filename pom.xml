<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redhat.exhort</groupId>
  <artifactId>exhort-java-api</artifactId>
  <version>0.0.7-SNAPSHOT</version>
  <name>Exhort Java API</name>
  <description>Exhort Java API</description>
  <url>https://github.com/RHEcosystemAppEng/exhort-java-api#readme</url>
  <inceptionYear>2023</inceptionYear>

  <properties>
    <skip.junit_platform>false</skip.junit_platform>
    <code.coverage.threshold>81%</code.coverage.threshold>
    <mutation.coverage.threshold>50</mutation.coverage.threshold>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <!-- Dependencies -->
    <jackson.version>2.15.0</jackson.version>
    <jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>
    <jakarta.mail.version>2.0.2</jakarta.mail.version>
    <cyclonedx.version>7.3.2</cyclonedx.version>
    <!-- Testing Dependencies -->
    <assertj.version>3.24.2</assertj.version>
    <junit-jupiter.version>5.9.1</junit-jupiter.version>
    <junit-pioneer.version>2.0.1</junit-pioneer.version>
    <mockito.version>5.3.1</mockito.version>
    <!-- Plugins -->
    <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.6.0</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
    <maven-help-plugin.version>3.4.0</maven-help-plugin.version>
    <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-release-plugin.version>3.0.0</maven-release-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-site-plugin.version>4.0.0-M6</maven-site-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    <build-helper-maven-plugin.version>3.4.0</build-helper-maven-plugin.version>
    <extra-enforcer-rules.version>1.6.2</extra-enforcer-rules.version>
    <flatten-maven-plugin.version>1.4.1</flatten-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
    <junit-platform-maven-plugin.version>1.1.7</junit-platform-maven-plugin.version>
    <license-maven-plugin.version>4.1</license-maven-plugin.version>
    <openapi-generator-maven-plugin.version>6.6.0</openapi-generator-maven-plugin.version>
    <pitest-maven.version>1.13.2</pitest-maven.version>
    <pitest-junit5-plugin.version>1.1.2</pitest-junit5-plugin.version>
    <versions-maven-plugin.version>2.15.0</versions-maven-plugin.version>
    <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
  </properties>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>TomerFi</id>
      <url>https://github.com/TomerFi</url>
    </developer>
    <developer>
      <id>zvigrinberg</id>
      <url>https://github.com/zvigrinberg</url>
    </developer>

  </developers>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/RHEcosystemAppEng/exhort-java-api/issues</url>
  </issueManagement>

  <scm>
    <url>https://github.com/RHEcosystemAppEng/exhort-java-api</url>
    <connection>scm:git:git@github.com:RHEcosystemAppEng/exhort-java-api.git</connection>
    <developerConnection>scm:git:git@github.com:RHEcosystemAppEng/exhort-java-api.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <ciManagement>
    <system>GitHub Workflows</system>
    <url>https://github.com/RHEcosystemAppEng/exhort-java-api/actions</url>
  </ciManagement>

  <dependencyManagement>
    <dependencies>
      <!-- Dependencies -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${jakarta.annotation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.angus</groupId>
        <artifactId>jakarta.mail</artifactId>
        <version>${jakarta.mail.version}</version>
      </dependency>
      <!-- Testing Dependencies -->
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit-pioneer</groupId>
        <artifactId>junit-pioneer</artifactId>
        <version>${junit-pioneer.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit-jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Dependencies -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.cyclonedx</groupId>
      <artifactId>cyclonedx-core-java</artifactId>
      <version>${cyclonedx.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->

    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.angus</groupId>
      <artifactId>jakarta.mail</artifactId>
    </dependency>
    <!-- Testing Dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.junit.jupiter</groupId>-->
<!--      <artifactId>junit-jupiter-engine</artifactId>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Apache Plugins -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-help-plugin</artifactId>
          <version>${maven-help-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <doclint>all,-missing</doclint>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <arguments>-DskipTests=true -Dskip.junit_platform=true -Pprepare-deployment,deploy-github</arguments>
            <tagNameFormat>v@{project.version}</tagNameFormat>
            <scmCommentPrefix>Build (Release): [skip ci] </scmCommentPrefix>
<!--            <signTag>true</signTag>-->
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <!-- Third-Party Plugins -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license-maven-plugin.version}</version>
          <configuration>
            <properties>
              <owner>Red Hat, Inc.</owner>
            </properties>
            <licenseSets>
              <licenseSet>
                <excludes>
                  <exclude>**/module-info.java</exclude>
                  <exclude>**/package-info.java</exclude>
                  <exclude>**/module-info.test</exclude>
                  <exclude>src/test/resources/**</exclude>
                  <exclude>src/main/resources/**</exclude>
                  <exclude>src/it/**/test/resources/**</exclude>
                  <exclude>src/it/**/main/resources/**</exclude>
                </excludes>
                <includes>
                  <include>src/main/**</include>
                  <include>src/test/**</include>
                  <include>src/it/**/src/main/**</include>
                  <include>src/it/**/src/test/**</include>
                </includes>
                <!--suppress UnresolvedMavenProperty -->
                <inlineHeader><![CDATA[Copyright © ${year} ${owner}

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.]]>
                </inlineHeader>
              </licenseSet>
            </licenseSets>
            <skipExistingHeaders>false</skipExistingHeaders>
          </configuration>
        </plugin>
        <plugin>
          <groupId>de.sormuras.junit</groupId>
          <artifactId>junit-platform-maven-plugin</artifactId>
          <version>${junit-platform-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <flattenMode>ossrh</flattenMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <excludes>
              <exclude>com/redhat/exhort/api/*</exclude>
              <exclude>com/redhat/exhort/api/serialization/*</exclude>
              <exclude>com/redhat/exhort/exception/*</exclude>
<!-- This one excluding ExhortApi implementation calss from coverage report as it's not tested by surefire plugin, but with junit-platform-maven-plugin              -->
              <exclude>com/redhat/exhort/impl/*</exclude>
              <exclude>com/redhat/exhort/logging/*</exclude>
              <exclude>com/redhat/exhort/image/ImageUtils.class</exclude>

            </excludes>
            <propertyName>jacoco.java.option</propertyName>
            <rules>
              <rule>
                <limits>
                  <limit>
                    <minimum>${code.coverage.threshold}</minimum>
                  </limit>
                </limits>
              </rule>
            </rules>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest-maven.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-junit5-plugin</artifactId>
              <version>${pitest-junit5-plugin.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <exportLineCoverage>true</exportLineCoverage>
            <excludedClasses>
              <excludedClass>com.redhat.exhort.api.*</excludedClass>
            </excludedClasses>
            <mutationThreshold>${mutation.coverage.threshold}</mutationThreshold>
            <mutators>
              <mutator>STRONGER</mutator>
            </mutators>
            <timestampedReports>false</timestampedReports>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- junit-platform-maven-plugin is use as an extension replacing the surefire plugin for running tests -->
      <plugin>
        <groupId>de.sormuras.junit</groupId>
        <artifactId>junit-platform-maven-plugin</artifactId>
<!--        <extensions>true</extensions>-->
        <executions>
          <execution>
            <id>Launch JUNit Platform</id>
            <phase>test</phase>
            <goals>
              <goal>launch</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
<!--          <tags>-->
<!--            <tag>ExhortApi</tag>-->
<!--            <tag>Operations</tag>-->
<!--          </tags>-->
          <skip>${skip.junit_platform}</skip>
          <classNamePatterns>
            <pattern>.*Exhort_Api_Test</pattern>
            <pattern>.*Operations_Test</pattern>
            <pattern>.*Envs_Test</pattern>
            <pattern>.*ImageUtilsTest</pattern>
          </classNamePatterns>


          <executor>JAVA</executor>
          <javaOptions>
            <additionalOptions>
              <!--suppress UnresolvedMavenProperty -->
              <jacoco>${jacoco.java.option}</jacoco>
            </additionalOptions>
          </javaOptions>
          <tags>
            <!-- in development, you can uncomment the following and tag specific tests you want to run -->
            <!--<tag>test_only</tag>-->
          </tags>
          <parameters>
            <junit.jupiter.execution.parallel.enabled>false</junit.jupiter.execution.parallel.enabled>
            <junit.jupiter.displayname.generator.default>org.junit.jupiter.api.DisplayNameGenerator$ReplaceUnderscores</junit.jupiter.displayname.generator.default><!-- editorconfig-checker-disable-line -->
          </parameters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludedGroups>
            IntegrationTest
          </excludedGroups>
          <reportFormat>plain</reportFormat>
          <consoleOutputReporter>
            <disable>false</disable>
          </consoleOutputReporter>
          <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter" />
          <excludes>
            <exclude>
              **/Exhort_Api_Test.java
            </exclude>
            <exclude>
              **/Operations_Test.java
            </exclude>
            <exclude>
              **/*Envs_Test.java
            </exclude>
            <exclude>
              **/*ImageUtilsTest.java
            </exclude>
          </excludes>
          <argLine>@{surefire.argLine}</argLine>
        </configuration>
        <dependencies>
          <!-- https://mvnrepository.com/artifact/me.fabriciorby/maven-surefire-junit5-tree-reporter -->
          <dependency>
            <groupId>me.fabriciorby</groupId>
            <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
            <version>1.2.1</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- jacoco-maven-plugin:prepare-agent is bound to the initialize phase and will attach the agent for collecting coverage -->
      <!-- jacoco-maven-plugin:check is bound to the verify phase and will check code coverage threshold -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
              <goal>check</goal>
            </goals>
            <configuration>
              <propertyName>surefire.argLine</propertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- help:active-profiles is bound to the validate phase and will print a list of active profiles. -->
      <plugin>
        <artifactId>maven-help-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>active-profiles</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- flatten-maven-plugin:clean is bound to the clean phase and will delete the .flattened-pom.xml file. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- enforcer:enforce is bound to the validate phase and will fail for the configured constraints. -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>${extra-enforcer-rules.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <dependencyConvergence />
            <requireJavaVersion>
              <version>[11,)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.8,)</version>
            </requireMavenVersion>
            <banDuplicateClasses />
            <banCircularDependencies />
          </rules>
        </configuration>
      </plugin>

      <!-- license-maven-plugin:check is bound to the verify phase and will fail for unlicensed sources. -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- build-helper-maven-plugin:add-source is bound to the generate-sources phase and will include generated files as sources -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
              <resources>
                <resource>
                  <directory>src/main/resources/exhort</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- openapi-generator-maven-plugin:generate is bound to the generate-sources phase and will generate sources from exhort spec -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/exhort/openapi.yaml</inputSpec>
              <generatorName>java</generatorName>
              <modelPackage>com.redhat.exhort.api</modelPackage>
              <output>${project.build.directory}</output>
              <configOptions>
                <documentationProvider>none</documentationProvider>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <serializableModel>true</serializableModel>
                <serializationLibrary>jackson</serializationLibrary>
                <sourceFolder>generated-sources</sourceFolder>
                <useJakartaEe>true</useJakartaEe>
              </configOptions>
              <library>native</library>
              <!--<generateModels>false</generateModels>-->
              <generateApis>false</generateApis>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <addCompileSourceRoot>false</addCompileSourceRoot>
              <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
              <inlineSchemaNameMappings>analysis_200_response=AnalysisResponse</inlineSchemaNameMappings>
                <schemaMappings>PackageRef=com.redhat.exhort.api.PackageRef</schemaMappings>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- use this profile for development stage -->
    <profile>
      <id>dev</id>
      <properties>
        <code.coverage.threshold>0%</code.coverage.threshold>
        <mutation.coverage.threshold>0</mutation.coverage.threshold>
        <enforcer.skip>true</enforcer.skip>
        <license.skip>true</license.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <failOnWarning>false</failOnWarning>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- use this profile to create jacoco execution reports -->
    <profile>
      <id>cov</id>
      <build>
        <plugins>
          <!-- jacoco-maven-plugin:report is bound to the verify phase and will create the coverage report -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jacoco-report</id>
                <goals>
                    <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- use this profile to execute integration testing -->
    <profile>
      <id>its</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>5.9.1</version>
              </dependency>
            </dependencies>
            <configuration>
              <groups>
                IntegrationTest
              </groups>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- use this profile to execute mutation testing -->
    <profile>
      <id>mut</id>
      <dependencies>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <!-- pitest-maven:mutationCoverage is used to run mutation testing -->
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <!-- REC: modify to scmMutationCoverage once the project starts -->
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- use this profile to include github registry distribution definition -->
    <!-- requires credentials set for github in ~/.m2/settings.xml -->
    <profile>
      <id>deploy-github</id>
      <distributionManagement>
        <repository>
          <id>github</id>
          <url>https://maven.pkg.github.com/RHEcosystemAppEng/exhort-java-api</url>
        </repository>
        <snapshotRepository>
          <id>github</id>
          <url>https://maven.pkg.github.com/RHEcosystemAppEng/exhort-java-api</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>de.sormuras.junit</groupId>
            <artifactId>junit-platform-maven-plugin</artifactId>
            <version>${junit-platform-maven-plugin.version}</version>
            <configuration>
            </configuration>
          </plugin>
        </plugins>
      </build>

    </profile>
    <!-- use this profile for packaging of jars to deploy to artifact repository -->
    <profile>
      <id>prepare-deployment</id>
      <build>
        <plugins>
          <!-- flatten-maven-plugin:flatten is bound to the process-resources phase and will create a .flattened-pom.xml -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>flatten</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- source:jar is bound to the generate-sources phase and will create a sources jar -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- javadoc:jar is bound to the generate-sources phase and will create a javadoc jar -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
